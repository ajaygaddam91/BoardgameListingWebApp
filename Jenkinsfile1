pipeline {
    agent {label 'jdk17'}
    
    /*tools {
        maven 'maven3'
        jdk 'jdk17'
    }*/
    
    environment {
        SCANNER_HOME= tool 'sonar'
    }
    triggers{
        pollSCM('* * * * *')
    }
    /*parameters{
        string{name:'project_name', defaultValue:'spring-pet-clinic',description:'project name for dependecny check'}
    }*/

    stages {                
        stage('Compile') {
            steps {
                sh "mvn compile"
            }
        }
        
        stage('Test') {
            steps {
                sh "mvn test"
            }
        }
       // stage("OWASP Check"){
         //   steps{
           //     dependencyCheck additionalArguments:'--scan .', odcInstallation:'odc'
             //   dependencyCheckPublisher pattern:'**/dependency-check-report.xml' 
            //}
        //} 
        
        stage('SonarQube') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Boardgame -Dsonar.projectKey=Boardgame -Dsonar.java.binaries=target/classes '''
                }
            }
        }
        stage("Quality Gates"){
            steps{
            waitForQualityGate abortPipeline: false, credentialsId: 'sonar'
            }
        }
        
        stage('Build') {
            steps {
                sh "mvn clean package"
            }
        }
        stage("trivy Scan") {
            steps{
                sh 'trivy fs --format table -o report.txt .'
            }
        }
        stage('Deploying to nexus'){
            steps{
                withMaven(globalMavenSettingsConfig: 'nexus', traceability: true) {
                sh 'mvn deploy'
}
            }
        }
    
        stage("Build image"){
            steps{
                withDockerRegistry(credentialsId: 'docker') {
                script{
                sh "sudo docker build -t ajaygaddam91/board-game:1.0 ."
            }
}
        }
    }
        stage("Docker image scan"){
             steps{
             sh 'sudo trivy image --format table -o image-trivy.html ajaygaddam91/board-game:1.0'
        }
    }
        stage("push to DockerHub"){
            steps{
                withDockerRegistry(credentialsId: 'docker') {
                script{
                sh "sudo docker push ajaygaddam91/board-game:1.0"
            }
}
        }
    }
    }
    post{
        success{
            emailext(
            to: 'ajaynair9612@gmail.com',
            subject: "Success: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
            body: '''<p>pipeline was successful and pushed to docker hub</p>.'''
            )            
        }
        failure{
            emailext(
                to: 'ajaynair9612@gmail.com',
                subject: "failure: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: '''<p>pipeline was unsuccessful</p>.'''
            )
        }

      }   
   }
