pipeline {
    agent {label 'jdk17'}
    
    /*tools {
        maven 'maven3'
        jdk 'jdk17'
    }*/
    
    environment {
        SCANNER_HOME= tool 'sonar'
    }
    triggers{
        pollSCM('* * * * *')
    }
    /*parameters{
        string{name:'project_name', defaultValue:'spring-pet-clinic',description:'project name for dependecny check'}
    }*/

    stages {                
        stage('Compile') {
            steps {
                sh "mvn compile"
            }
        }
        
        stage('Test') {
            steps {
                sh "mvn test"
            }
        }
        stage("OWASP Check"){
            steps{
                dependencyCheck additionalArguments:'--scan . --format html' odcInstallation: 'odc'
                dependencyCheckPublic pattern: '' 
            }
        }
        
        stage('SonarQube') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Boardgame -Dsonar.projectKey=Boardgame -Dsonar.java.binaries=target/classes '''
                }
            }
        }
        stage("Quality Gates"){
            steps{
            waitForQualityGate abortPipeline: false, credentialsId: 'sonar'
            }
        }
        
        stage('Build') {
            steps {
                sh "mvn clean package"
            }
        }
        stage("trivy Scan") {
            steps{
                sh 'trivy fs --format table -o report.txt .'
            }
        }
        stage('Deploying to nexus'){
            steps{
                withMaven(globalMavenSettingsConfig: 'nexus', traceability: true) {
                sh 'mvn deploy'
}
            }
        }
    }
}
